Archive member included to satisfy reference by file (symbol)

c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
                              C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o (exit)

Discarded input sections

 .data          0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
 .bss           0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
 .text          0x00000000        0x0 lcd.o
 .data          0x00000000        0x0 lcd.o
 .bss           0x00000000        0x0 lcd.o
 .text.set_cursor
                0x00000000        0x8 lcd.o
 .text.shift_display
                0x00000000       0x52 lcd.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 uart0.o
 .data          0x00000000        0x0 uart0.o
 .bss           0x00000000        0x0 uart0.o
 .text.uart0_sendChar
                0x00000000        0xc uart0.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
LOAD lcd.o
LOAD main.o
LOAD uart0.o
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr51\libm.a
END GROUP
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr51\libm.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr51\libc.a
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51\libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x2b8
 *(.vectors)
 .vectors       0x00000000       0x8c C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000098        0x4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x0000009c        0x2 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o
                0x0000009c                __vector_22
                0x0000009c                __vector_28
                0x0000009c                __vector_1
                0x0000009c                __vector_32
                0x0000009c                __vector_34
                0x0000009c                __vector_24
                0x0000009c                __vector_12
                0x0000009c                __bad_interrupt
                0x0000009c                __vector_6
                0x0000009c                __vector_31
                0x0000009c                __vector_3
                0x0000009c                __vector_23
                0x0000009c                __vector_30
                0x0000009c                __vector_25
                0x0000009c                __vector_11
                0x0000009c                __vector_13
                0x0000009c                __vector_17
                0x0000009c                __vector_19
                0x0000009c                __vector_7
                0x0000009c                __vector_27
                0x0000009c                __vector_5
                0x0000009c                __vector_33
                0x0000009c                __vector_4
                0x0000009c                __vector_9
                0x0000009c                __vector_2
                0x0000009c                __vector_21
                0x0000009c                __vector_15
                0x0000009c                __vector_29
                0x0000009c                __vector_8
                0x0000009c                __vector_26
                0x0000009c                __vector_14
                0x0000009c                __vector_10
                0x0000009c                __vector_16
                0x0000009c                __vector_18
                0x0000009c                __vector_20
                0x0000009e                . = ALIGN (0x2)
 *(.text.*)
 .text.display_char
                0x0000009e       0x48 lcd.o
                0x0000009e                display_char
 .text.lcd_command
                0x000000e6       0x40 lcd.o
                0x000000e6                lcd_command
 .text.display_text
                0x00000126       0x4e lcd.o
                0x00000126                display_text
 .text.clear_display
                0x00000174        0xa lcd.o
                0x00000174                clear_display
 .text.lcd_init
                0x0000017e       0x84 lcd.o
                0x0000017e                lcd_init
 .text.wait     0x00000202       0x22 main.o
                0x00000202                wait
 .text.main     0x00000224       0x4a main.o
                0x00000224                main
 .text.usart0_init
                0x0000026e       0x12 uart0.o
                0x0000026e                usart0_init
 .text.usart0_start
                0x00000280        0x8 uart0.o
                0x00000280                usart0_start
 .text.uart0_receiveChar
                0x00000288        0x8 uart0.o
                0x00000288                uart0_receiveChar
 .text.uart0_receiveString
                0x00000290       0x24 uart0.o
                0x00000290                uart0_receiveString
                0x000002b4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000002b4        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
                0x000002b4                _exit
                0x000002b4                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000002b4        0x4 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000002b8                _etext = .

.data           0x00800100        0x0 load address 0x000002b8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x000002b8                __data_load_start = LOADADDR (.data)
                0x000002b8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 lcd.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 main.o
 .comment       0x00000030       0x31 uart0.o

.note.gnu.avr.deviceinfo
                0x00000000       0x3c
 .note.gnu.avr.deviceinfo
                0x00000000       0x3c C:/Program Files (x86)/Atmel/Studio/7.0/Packs/Atmel/ATmega_DFP/1.0.91/gcc/dev/atmega128/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xb8
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x50 lcd.o
 .debug_aranges
                0x00000050       0x28 main.o
 .debug_aranges
                0x00000078       0x40 uart0.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x9f8
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x60e lcd.o
 .debug_info    0x0000060e      0x298 main.o
 .debug_info    0x000008a6      0x152 uart0.o

.debug_abbrev   0x00000000      0x468
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1ac lcd.o
 .debug_abbrev  0x000001ac      0x1a0 main.o
 .debug_abbrev  0x0000034c      0x11c uart0.o

.debug_line     0x00000000      0x5b6
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x2df lcd.o
 .debug_line    0x000002df      0x193 main.o
 .debug_line    0x00000472      0x144 uart0.o

.debug_frame    0x00000000      0x170
 *(.debug_frame)
 .debug_frame   0x00000000       0xb4 lcd.o
 .debug_frame   0x000000b4       0x44 main.o
 .debug_frame   0x000000f8       0x78 uart0.o

.debug_str      0x00000000      0x277
 *(.debug_str)
 .debug_str     0x00000000      0x1e5 lcd.o
                                0x229 (size before relaxing)
 .debug_str     0x000001e5       0x53 main.o
                                0x216 (size before relaxing)
 .debug_str     0x00000238       0x3f uart0.o
                                0x1c0 (size before relaxing)

.debug_loc      0x00000000      0x4f0
 *(.debug_loc)
 .debug_loc     0x00000000      0x35f lcd.o
 .debug_loc     0x0000035f       0xb1 main.o
 .debug_loc     0x00000410       0xe0 uart0.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x88
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x40 lcd.o
 .debug_ranges  0x00000040       0x18 main.o
 .debug_ranges  0x00000058       0x30 uart0.o

.debug_macro
 *(.debug_macro)
OUTPUT(MIC-Week5.elf elf32-avr)
LOAD linker stubs
